"""empty message

Revision ID: 3059dcbb20fc
Revises: 7f501f860fa3
Create Date: 2023-12-01 01:24:27.457191

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3059dcbb20fc'
down_revision: Union[str, None] = '7f501f860fa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('challenge_master', 'CHALLENGE_STATUS',
               existing_type=postgresql.ENUM('PENDING', 'ACTIVE', 'COMPLETE', 'FAILED', name='ChallengeStatus'),
               type_=sa.Enum('PENDING', 'PROGRESS', 'COMPLETE', 'FAILED', name='ChallengeStatusType'),
               existing_nullable=True)
    op.alter_column('challenge_users', 'ACCEPT_STATUS',
               existing_type=postgresql.ENUM('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='AcceptType'),
               type_=sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='InviteAcceptType'),
               existing_nullable=True)
    op.add_column('friend', sa.Column('InviteAcceptType', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='InviteAcceptType'), nullable=True))
    op.drop_column('friend', 'AcceptType')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('friend', sa.Column('AcceptType', postgresql.ENUM('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='accepttype'), autoincrement=False, nullable=True))
    op.drop_column('friend', 'InviteAcceptType')
    op.alter_column('challenge_users', 'ACCEPT_STATUS',
               existing_type=sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='InviteAcceptType'),
               type_=postgresql.ENUM('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='AcceptType'),
               existing_nullable=True)
    op.alter_column('challenge_master', 'CHALLENGE_STATUS',
               existing_type=sa.Enum('PENDING', 'PROGRESS', 'COMPLETE', 'FAILED', name='ChallengeStatusType'),
               type_=postgresql.ENUM('PENDING', 'ACTIVE', 'COMPLETE', 'FAILED', name='ChallengeStatus'),
               existing_nullable=True)
    # ### end Alembic commands ###
