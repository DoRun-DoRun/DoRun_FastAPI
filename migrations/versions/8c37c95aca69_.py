"""empty message

Revision ID: 8c37c95aca69
Revises: 
Create Date: 2023-11-28 01:08:24.133838

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c37c95aca69'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenge_master',
    sa.Column('CHALLENGE_MST_NO', sa.Integer(), nullable=False),
    sa.Column('CHALLENGE_MST_NM', sa.String(), nullable=True),
    sa.Column('START_DT', sa.Date(), nullable=True),
    sa.Column('END_DT', sa.Date(), nullable=True),
    sa.Column('HEADER_EMOJI', sa.String(), nullable=True),
    sa.Column('CHALLENGE_STATUS', sa.Enum('PENDING', 'ACTIVE', 'COMPLETE', 'FAILED', name='ChallengeStatus'), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.Column('DELETE_DT', sa.DateTime(), nullable=True),
    sa.Column('DELETE_YN', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('CHALLENGE_MST_NO')
    )
    op.create_table('user',
    sa.Column('USER_NO', sa.Integer(), nullable=False),
    sa.Column('SIGN_TYPE', sa.Enum('KAKAO', 'APPLE', 'GUEST', name='SignType'), nullable=True),
    sa.Column('USER_NM', sa.String(), nullable=True),
    sa.Column('UID', sa.Integer(), nullable=True),
    sa.Column('USER_EMAIL', sa.String(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.Column('RECENT_LOGIN_DT', sa.DateTime(), nullable=True),
    sa.Column('DISABLE_YN', sa.Boolean(), nullable=True),
    sa.Column('DISABLE_DT', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('USER_NO'),
    sa.UniqueConstraint('USER_EMAIL')
    )
    op.create_index(op.f('ix_user_UID'), 'user', ['UID'], unique=True)
    op.create_table('challenge_users',
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=False),
    sa.Column('ACCEPT_STATUS', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='AcceptType'), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.Column('IS_OWNER', sa.Boolean(), nullable=True),
    sa.Column('IS_LEADER', sa.Boolean(), nullable=True),
    sa.Column('USER_NO', sa.Integer(), nullable=True),
    sa.Column('CHALLENGE_MST_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_NO'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('CHALLENGE_USER_NO')
    )
    op.create_table('character',
    sa.Column('CHARACTER_NO', sa.Integer(), nullable=False),
    sa.Column('CHARACTER_NM', sa.String(), nullable=True),
    sa.Column('STATUS', sa.Enum(name='OwnerShipType'), nullable=True),
    sa.Column('USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('CHARACTER_NO')
    )
    op.create_table('friend',
    sa.Column('FRIEND_NO', sa.Integer(), nullable=False),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('ACCEPT_DT', sa.DateTime(), nullable=True),
    sa.Column('AcceptType', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='accepttype'), nullable=True),
    sa.Column('SENDER_UID', sa.Integer(), nullable=True),
    sa.Column('RECIPIENT_UID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['RECIPIENT_UID'], ['user.USER_NO'], ),
    sa.ForeignKeyConstraint(['SENDER_UID'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('FRIEND_NO')
    )
    op.create_table('pet',
    sa.Column('PET_NO', sa.Integer(), nullable=False),
    sa.Column('PetType', sa.Enum('PET_TYPE1', 'PET_TYPE2', name='pettype'), nullable=True),
    sa.Column('STATUS', sa.Enum(name='OwnerShipType'), nullable=True),
    sa.Column('USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('PET_NO')
    )
    op.create_table('user_setting',
    sa.Column('USER_SETTING_NO', sa.Integer(), nullable=False),
    sa.Column('AGREE_POLICY_YN', sa.Boolean(), nullable=True),
    sa.Column('AGREE_POLICY_DT', sa.DateTime(), nullable=True),
    sa.Column('NOTICE_PUSH_YN', sa.Boolean(), nullable=True),
    sa.Column('NOTICE_PUSH_DT', sa.DateTime(), nullable=True),
    sa.Column('NOTICE_PUSH_NIGHT_YN', sa.Boolean(), nullable=True),
    sa.Column('NOTICE_PUSH_NIGHT_DT', sa.DateTime(), nullable=True),
    sa.Column('USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('USER_SETTING_NO')
    )
    op.create_table('additional_goal',
    sa.Column('ADDITIONAL_NO', sa.Integer(), nullable=False),
    sa.Column('ADDITIONAL_NM', sa.String(), nullable=True),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('START_DT', sa.DateTime(), nullable=True),
    sa.Column('END_DT', sa.DateTime(), nullable=True),
    sa.Column('IMAGE_FILE_NM', sa.String(), nullable=True),
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_USER_NO'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('ADDITIONAL_NO')
    )
    op.create_table('item_log',
    sa.Column('ITEM_LOG_NO', sa.Integer(), nullable=False),
    sa.Column('ITEM_NM', sa.Enum('BOOM', 'HAMMER', name='ItemType'), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('SENDER_UID', sa.Integer(), nullable=True),
    sa.Column('RECIPIENT_UID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['RECIPIENT_UID'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.ForeignKeyConstraint(['SENDER_UID'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('ITEM_LOG_NO')
    )
    op.create_table('item_user',
    sa.Column('ITEM_NO', sa.Integer(), nullable=False),
    sa.Column('ITEM_NM', sa.Enum('BOOM', 'HAMMER', name='ItemType'), nullable=True),
    sa.Column('COUNT', sa.Integer(), nullable=True),
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_USER_NO'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('ITEM_NO')
    )
    op.create_table('person_daily_goal',
    sa.Column('PERSON_NO', sa.Integer(), nullable=False),
    sa.Column('PERSON_NM', sa.String(), nullable=True),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('UPDATE_DT', sa.DateTime(), nullable=True),
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_USER_NO'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('PERSON_NO')
    )
    op.create_table('person_daily_goal_complete',
    sa.Column('DAILY_COMPLETE_NO', sa.Integer(), nullable=False),
    sa.Column('IMAGE_FILE_NM', sa.String(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('COMMENTS', sa.String(), nullable=True),
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_USER_NO'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('DAILY_COMPLETE_NO')
    )
    op.create_table('team_weekly_goal',
    sa.Column('TEAM_NO', sa.Integer(), nullable=False),
    sa.Column('TEAM_NM', sa.String(), nullable=True),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('START_DT', sa.DateTime(), nullable=True),
    sa.Column('END_DT', sa.DateTime(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.Column('CHALLENGE_USER_NO', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_USER_NO'], ['challenge_users.CHALLENGE_USER_NO'], ),
    sa.PrimaryKeyConstraint('TEAM_NO')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_weekly_goal')
    op.drop_table('person_daily_goal_complete')
    op.drop_table('person_daily_goal')
    op.drop_table('item_user')
    op.drop_table('item_log')
    op.drop_table('additional_goal')
    op.drop_table('user_setting')
    op.drop_table('pet')
    op.drop_table('friend')
    op.drop_table('character')
    op.drop_table('challenge_users')
    op.drop_index(op.f('ix_user_UID'), table_name='user')
    op.drop_table('user')
    op.drop_table('challenge_master')
    # ### end Alembic commands ###
