"""empty message

Revision ID: 8922b19fdf4d
Revises: 
Create Date: 2023-11-19 22:22:49.062643

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8922b19fdf4d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenge_master',
    sa.Column('CHALLENGE_MST_NO', sa.Integer(), nullable=False),
    sa.Column('CHALLENGE_MST_NM', sa.String(), nullable=True),
    sa.Column('START_DT', sa.Date(), nullable=True),
    sa.Column('END_DT', sa.Date(), nullable=True),
    sa.Column('HEADER_EMOJI', sa.String(), nullable=True),
    sa.Column('CHALLENGE_STATUS', sa.Enum('PENDING', 'ACTIVE', 'COMPLETE', 'FAILED', name='ChallengeStatus'), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('DELETE_DT', sa.DateTime(), nullable=True),
    sa.Column('DELETE_YN', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('CHALLENGE_MST_NO')
    )
    op.create_table('user',
    sa.Column('USER_NO', sa.Integer(), nullable=False),
    sa.Column('SIGN_TYPE', sa.Enum('KAKAO', 'APPLE', 'GUEST', name='LoginType'), nullable=True),
    sa.Column('USER_NM', sa.String(), nullable=True),
    sa.Column('UID', sa.Integer(), nullable=True),
    sa.Column('USER_EMAIL', sa.String(), nullable=True),
    sa.Column('REGISTER_DT', sa.DateTime(), nullable=True),
    sa.Column('UPDATE_DT', sa.DateTime(), nullable=True),
    sa.Column('RECENT_LOGIN_DT', sa.DateTime(), nullable=True),
    sa.Column('DISABLE_YN', sa.Boolean(), nullable=True),
    sa.Column('DISABLE_DT', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('USER_NO'),
    sa.UniqueConstraint('UID'),
    sa.UniqueConstraint('USER_EMAIL')
    )
    op.create_table('additional_goal',
    sa.Column('ADDITIONAL_GOAL', sa.Integer(), nullable=False),
    sa.Column('ADDITIONAL_GOAL_NM', sa.String(), nullable=False),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('START_DT', sa.DateTime(), nullable=True),
    sa.Column('END_DT', sa.DateTime(), nullable=True),
    sa.Column('AUTH_IMAGE_FILE_NM', sa.String(), nullable=True),
    sa.Column('CHALLENGE_MST_ID', sa.Integer(), nullable=True),
    sa.Column('USER_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_ID'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['USER_ID'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('ADDITIONAL_GOAL')
    )
    op.create_table('challenge_user',
    sa.Column('USER_NO', sa.Integer(), nullable=False),
    sa.Column('CHALLENGE_MST_NO', sa.Integer(), nullable=False),
    sa.Column('PROGRESS', sa.Double(), nullable=True),
    sa.Column('STATUS', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='AcceptType'), nullable=False),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_NO'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('USER_NO', 'CHALLENGE_MST_NO')
    )
    op.create_table('daily_complete',
    sa.Column('DAILY_COMPLETE_NO', sa.Integer(), nullable=False),
    sa.Column('AUTH_IMAGE_FILE_NM', sa.String(), nullable=True),
    sa.Column('COMMENTS', sa.String(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('CHALLENGE_MST_ID', sa.Integer(), nullable=True),
    sa.Column('USER_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_ID'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['USER_ID'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('DAILY_COMPLETE_NO')
    )
    op.create_table('person_goal',
    sa.Column('PERSON_GOAL_NO', sa.Integer(), nullable=False),
    sa.Column('PERSON_GOAL_NM', sa.String(), nullable=False),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('CHALLENGE_MST_ID', sa.Integer(), nullable=True),
    sa.Column('USER_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_ID'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['USER_ID'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('PERSON_GOAL_NO')
    )
    op.create_table('team_goal',
    sa.Column('TEAM_GOAL_NO', sa.Integer(), nullable=False),
    sa.Column('TEAM_GOAL_NM', sa.String(), nullable=False),
    sa.Column('IS_DONE', sa.Boolean(), nullable=True),
    sa.Column('INSERT_DT', sa.DateTime(), nullable=True),
    sa.Column('MODIFY_DT', sa.DateTime(), nullable=True),
    sa.Column('CHALLENGE_MST_ID', sa.Integer(), nullable=True),
    sa.Column('USER_ID', sa.Integer(), nullable=True),
    sa.Column('LEADER_ID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CHALLENGE_MST_ID'], ['challenge_master.CHALLENGE_MST_NO'], ),
    sa.ForeignKeyConstraint(['LEADER_ID'], ['user.USER_NO'], ),
    sa.ForeignKeyConstraint(['USER_ID'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('TEAM_GOAL_NO')
    )
    op.create_table('daily_complete_user',
    sa.Column('USER_NO', sa.Integer(), nullable=False),
    sa.Column('DAILY_COMPLETE_NO', sa.Integer(), nullable=False),
    sa.Column('EMOJI', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['DAILY_COMPLETE_NO'], ['daily_complete.DAILY_COMPLETE_NO'], ),
    sa.ForeignKeyConstraint(['USER_NO'], ['user.USER_NO'], ),
    sa.PrimaryKeyConstraint('USER_NO', 'DAILY_COMPLETE_NO')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('daily_complete_user')
    op.drop_table('team_goal')
    op.drop_table('person_goal')
    op.drop_table('daily_complete')
    op.drop_table('challenge_user')
    op.drop_table('additional_goal')
    op.drop_table('user')
    op.drop_table('challenge_master')
    # ### end Alembic commands ###
